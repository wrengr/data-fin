* Implement the Word* variants
* Implement (Fin m, Fin n) <-> Fin (Times m n)
* Implement unfplus
* ? Implement compare : {n : Nat}(i j : Fin n) -> EqView i j
* ? Implement maxViewPlus, predViewLE, predViewPlus
* Remove extraneous modules
* Use extensible exceptions instead of `error`
* Add
    fold : ∀ (T : ℕ → Set) {m} →
        (∀ {n} → T n → T (suc n)) →
        (∀ {n} → T (suc n)) →
        Fin m → T m
    fold T f x zero    = x
    fold T f x (suc i) = f (fold T f x i)
* Anything else from <http://www.cse.chalmers.se/~nad/repos/lib/src/Data/Fin.agda>?
