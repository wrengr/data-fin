data-fin
========

While this package uses complex type machinery, it should be easy
to install. You should be able to use one of the following standard
methods to install it.

    -- With cabal-install and without the source:
    $> cabal install data-fin
    
    -- With cabal-install and with the source already:
    $> cd data-fin
    $> cabal install
    
    -- Without cabal-install, but with the source already:
    $> cd data-fin
    $> runhaskell Setup.hs configure --user
    $> runhaskell Setup.hs build
    $> runhaskell Setup.hs test
    $> runhaskell Setup.hs haddock --hyperlink-source
    $> runhaskell Setup.hs copy
    $> runhaskell Setup.hs register

The test step is optional and currently does nothing. The Haddock
step is also optional.


Portability
===========

While I usually try to keep things as portable as possible, this
package relies on many GHC language extensions. Thus, no claim of
portability ot non-GHC compilers is made. All the required language
extensions are:

CPP
DeriveDataTypeable
EmptyDataDecls
FlexibleContexts
FlexibleInstances
FunctionalDependencies
MultiParamTypeClasses
Rank2Types
ScopedTypeVariables
TypeOperators
Trustworthy  -- GHC >= 7.1 only
UndecidableInstances

----------------------------------------------------------- fin.
